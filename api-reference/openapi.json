{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://vo3hxrpx6g.execute-api.us-east-2.amazonaws.com/dev"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/submit_job": {
      "post": {
        "description": "Submits a Value at Risk job",
        "requestBody": {
          "description": "Job to submit to the server",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "server response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/get_job/{job_id}/{data_type}/{data_format}": {
      "get": {
        "description": "Returns the results of a job or its status based on the ID supplied",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "data_type",
            "in": "path",
            "description": "Whether to retrieve the portfolio-level, marginal-level, or distribution results data",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["marginal", "portfolio", "histogram"]
            }
          },
          {
            "name": "data_format",
            "in": "path",
            "description": "File format to retrieve the results in",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["fpml", "csv", "json", "xml", "yaml"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the job results in CSV format",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "example-1": {
                    "summary": "A sample CSV response",
                    "value": [
                      "Ticker, 90%_VaR, 95%_VaR, 99%_VaR, 90%_CVaR, 95%_CVaR, 99%_CVaR, Market Value, Quantity",
                      "Portfolio, -9.3, -11.3, -14.8, -13.5, -16.5, -18.2, 35000,,",
                      "AAPL, -5.2, -6.3, -8.1, -7.5, -9.0, -11.2, 150000, 1000",
                      "GOOGL, -4.1, -5.0, -6.7, -6.0, -7.5, -9.0, 200000, 500"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stop_job/{job_id}": {
      "post": {
        "description": "Stops a single job based on the ID supplied",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of job to stop",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Submit": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "settings": {
            "description": "The settings of the simulation",
            "type": "object",
            "properties": {
              "num_scenarios": {
                "description": "The number of simulated scenarios to run",
                "type": "integer",
                "format": "int32"
              },
              "time_horizon_days": {
                "description": "The number of days forward to simulate in each scenario",
                "type": "integer",
                "format": "int32"
              },
              "data_input_format": {
                "description": "The format of the input data",
                "type": "string",
                "enum": ["FPML", "JSON", "XML", "YAML"]
              },
              "confidence_levels": {
                "description": "The confidence levels",
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                }
              },
              "method": {
                "description": "The sampling method to use",
                "type": "string",
                "enum": ["Monte-Carlo", "Historical"]
              }
            }
          },
          "portfolio": {
            "description": "Your portfolio of positions",
            "type": "object",
            "properties": {
              "futures": {
                "$ref": "#/components/schemas/FuturePositions"
              },
              "stocks": {
                "$ref": "#/components/schemas/StockPositions"
              },
              "options": {
                "$ref": "#/components/schemas/OptionPositions"
              },
              "bonds": {
                "$ref": "#/components/schemas/BondPositions"
              }
            }
          }
        }
      },
      "FuturePositions": {
        "description": "Positions in futures",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "ticker": {
              "description": "The ticker symbol of the future",
              "type": "string"
            },
            "type":{ 
              "description": "Whether the position is long or short",
              "type": "string",
              "enum": ["long", "short"]
            },
            "quantity": {
              "description": "The number of contracts held",
              "type": "number",
              "format": "float"
            }
          }
        }
      },
      "StockPositions": {
        "description": "Positions in stocks",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "ticker": {
              "description": "The ticker symbol of the stock",
              "type": "string"
            },
            "type":{ 
              "description": "Whether the position is long or short",
              "type": "string",
              "enum": ["long", "short"]
            },
            "quantity": {
              "description": "The number of shares held",
              "type": "number",
              "format": "float"
            }
          }
        }
      },
      "OptionPositions": {
        "description": "Positions in options",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "ticker": {
              "description": "The ticker symbol of the underlying stock",
              "type": "string"
            },
            "type": {
              "description": "Whether the position is long or short",
              "type": "string",
              "enum": ["long", "short"]
            },
            "style": {
              "description": "Tag to specify the payoff style",
              "type": "string",
              "enum": ["european", "euro", "eu", "e", "american", "amer", "am", "a"]
            },
            "put": {
              "description": "Tag to specify put or call",
              "type": "string",
              "enum": ["call", "put"]
            },
            "strike": {
              "description": "The strike price",
              "type": "number",
              "format": "float"
            },
            "maturity": {
              "description": "The maturity date (yyyy-mm-dd)",
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
            },
            "quantity": {
              "description": "The number of contracts held",
              "type": "number",
              "format": "float"
            }
          }
        }
      },
      "BondPositions": {
        "description": "Positions in bonds",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "maturity": {
              "description": "The maturity term of the bond",
              "type": "string",
              "enum": ["1mo", "2mo", "3mo", "4mo", "6mo", "1y", "2y", "3y", "5y", "7y", "10y", "20y", "30y"]
            },
            "total_face_value": {
              "description": "The total face value of the bond",
              "type": "number",
              "format": "float"
            }
          }
        }
      },
      "Job": {
        "required": [
          "job_id",
          "status"
        ],
        "type": "object",
        "properties": {
          "job_id": {
            "description": "The ID of the successfully submitted job",
            "type": "string"
          },
          "status": {
            "description": "The status of the job submission request",
            "type": "string"
          }
        }
      },
      "Result": {
        "required": [
          "job_id",
          "status"
        ],
        "type": "object",
        "properties": {
          "job_id": {
            "description": "The ID of the successfully submitted job",
            "type": "string"
          },
          "status": {
            "description": "The status of the job submission request",
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Server authentication header of the form `x-api-key: <api-key>`, where `<api-key>` is your auth token"
      }
    }
  }
}